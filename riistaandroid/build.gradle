apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'
apply plugin: 'org.jetbrains.kotlin.plugin.serialization'

def keystorePropertiesFile = rootProject.file("riista.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 33

    defaultConfig {
        applicationId "fi.riista.mobile"
        versionCode 1316
        versionName "2.6.8"

        manifestPlaceholders = [
                use_crashlytics:false
        ]

        minSdkVersion 21
        targetSdkVersion 33
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }


    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['keyStoreFile'])
            storePassword keystoreProperties['keyStorePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt') //, 'proguard-project.txt'
        }
        debug {
            minifyEnabled false
        }
    }

    flavorDimensions "default_dimension"

    productFlavors {
        production {
            dimension "default_dimension"
            buildConfigField "String", "SERVER_ADDRESS", '"https://oma.riista.fi"'
            resValue "string", "app_name", "Oma riista"
            manifestPlaceholders.use_crashlytics = true
        }
        staging {
            dimension "default_dimension"
            buildConfigField "String", "SERVER_ADDRESS", keystoreProperties['stagingUrl']
            resValue "string", "app_name", "Oma riista (Staging)"
            manifestPlaceholders.use_crashlytics = true

            applicationIdSuffix ".staging"
            versionNameSuffix "-staging"
        }
        dev {
            dimension "default_dimension"
            buildConfigField "String", "SERVER_ADDRESS", keystoreProperties['developmentUrl']
            resValue "string", "app_name", "Oma riista (Dev)"

            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
        }
    }

    compileOptions {
        // Enable support for the new language APIs. This is required by the riista-common-lib
        // as it uses kotlinx.datetime library which requires this
        coreLibraryDesugaringEnabled true

        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.includeAndroidResources = true

        // Uncomment only if there arise problems with tests
        //unitTests.returnDefaultValues = true
    }
    packagingOptions {
        resources {
            excludes += [
                'META-INF/DEPENDENCIES.txt',
                'META-INF/NOTICE',
                'META-INF/NOTICE.txt',
                'META-INF/NOTICE.md',
                'META-INF/LICENSE',
                'META-INF/LICENSE.txt',
                'META-INF/LICENSE.md'
            ]
        }
    }

    lint {
        abortOnError false
    }
    namespace 'fi.riista.mobile'
}

def dagger_version = '2.46.1'
def joda_version = '2.10.7'
def lifecycle_version = '2.6.1'
def glide_version = '4.12.0'

def mockitoVersion = '2.28.2'
def hamcrestVersion = '2.2'
def kotlinxDatetimeVersion = '0.4.0'
def kotlinxSerializationVersion = "1.5.0" // Use same as in mobile-common-lib

dependencies {
    implementation project(':mobile-common-lib')
    implementation project(':AndroidUtilsLib')

    // core library desugaring as required by mobile-common-lib
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-datetime:$kotlinxDatetimeVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinxSerializationVersion"

    // Firebase and Play services

    // Import the Firebase BoM which declares firebase library versions
    implementation platform('com.google.firebase:firebase-bom:28.4.0')
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation "com.google.firebase:firebase-config-ktx"
    implementation 'com.google.firebase:firebase-analytics'

    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'

    // Joda
    implementation "net.danlew:android.joda:$joda_version"
    implementation 'org.joda:joda-convert:2.2.1'
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-joda:$jackson_version", {
        // Because Android specialized version is used instead.
        exclude module: 'joda-time'
    }

    // Support libraries
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.fragment:fragment-ktx:1.5.7"
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation "androidx.window:window:1.1.0"

    // For loading and tinting drawables on older versions of the platform
    implementation "androidx.appcompat:appcompat-resources:$appcompat_version"
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    // Dagger injection
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version" // For AndroidX support libraries
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    implementation 'com.google.android.material:material:1.9.0'
    implementation 'com.google.protobuf.nano:protobuf-javanano:3.1.0'
    implementation 'com.google.zxing:core:3.5.1'
    implementation 'com.google.maps.android:android-maps-utils:2.2.3'
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.4.1'

    implementation 'com.journeyapps:zxing-android-embedded:3.5.0'

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.1'

    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.hamcrest:hamcrest:$hamcrestVersion"

    // Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:2.2.0"

    // Separate Joda artifact for tests in order to not require Android-specific initialization in JUnit tests.
    testImplementation "joda-time:joda-time:$joda_version"

    // Test data generation
    testImplementation 'net.andreinc.mockneat:mockneat:0.1.7'
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}
